AWSTemplateFormatVersion: "2010-09-09"
Description: "CloudFormation template to create a VPC with public/private subnets, Internet Gateway, NAT Gateway, route tables, and an S3 endpoint for private subnets."

Parameters:
  VpcCidrBlock:
    Type: String
    Default: "10.0.0.0/16"
    Description: "CIDR block to use for the VPC."
    
  SubnetMask:
    Type: Number
    Default: 19
    Description: "Subnet mask to use."

  VpcName:
    Type: String
    Default: "WorkshopVPC"
    Description: "Name of the VPC."

Resources:
# VPC Creation
VPC:
  Type: AWS::EC2::VPC
  Properties:
    CidrBlock: !Ref VpcCidrBlock
    EnableDnsSupport: true
    EnableDnsHostnames: true
    Tags:
      - Key: Name
        Value: !Ref VpcName

# Internet Gateway
InternetGateway:
  Type: AWS::EC2::InternetGateway
  Properties:
    Tags:
      - Key: Name
        Value: !Sub "IGW_${VpcName}"

AttachGateway:
  Type: AWS::EC2::VPCGatewayAttachment
  DependsOn:
    - VPC
    - InternetGateway
  Properties:
    VpcId: !Ref VPC
    InternetGatewayId: !Ref InternetGateway

# Public Subnets
PublicSubnet1:
  Type: AWS::EC2::Subnet
  Properties:
    VpcId: !Ref VPC
    CidrBlock: !Select [0, !Cidr [!Ref VpcCidrBlock, 8, 8]]
    MapPublicIpOnLaunch: true
    AvailabilityZone: !Ref AvailabilityZone1
    Tags:
      - Key: Name
        Value: "Public Subnet 1"

PublicSubnet2:
  Type: AWS::EC2::Subnet
  Properties:
    VpcId: !Ref VPC
    CidrBlock: !Select [1, !Cidr [!Ref VpcCidrBlock, 8, 8]]
    MapPublicIpOnLaunch: true
    AvailabilityZone: !Ref AvailabilityZone2
    Tags:
      - Key: Name
        Value: "Public Subnet 2"

# NAT Gateway Elastic IPs
NatGatewayEIP1:
  Type: AWS::EC2::EIP
  Properties:
    Domain: vpc

NatGatewayEIP2:
  Type: AWS::EC2::EIP
  Properties:
    Domain: vpc

# NAT Gateways
NatGateway1:
  Type: AWS::EC2::NatGateway
  DependsOn:
    - NatGatewayEIP1
    - PublicSubnet1
  Properties:
    AllocationId: !GetAtt NatGatewayEIP1.AllocationId
    SubnetId: !Ref PublicSubnet1
    Tags:
      - Key: Name
        Value: !Sub "NAT1_${VpcName}"

NatGateway2:
  Type: AWS::EC2::NatGateway
  DependsOn:
    - NatGatewayEIP2
    - PublicSubnet2
  Properties:
    AllocationId: !GetAtt NatGatewayEIP2.AllocationId
    SubnetId: !Ref PublicSubnet2
    Tags:
      - Key: Name
        Value: !Sub "NAT2_${VpcName}"

# Private Subnets
PrivateSubnet1:
  Type: AWS::EC2::Subnet
  Properties:
    VpcId: !Ref VPC
    CidrBlock: !Select [2, !Cidr [!Ref VpcCidrBlock, 8, 8]]
    AvailabilityZone: !Ref AvailabilityZone1
    Tags:
      - Key: Name
        Value: "Private Subnet 1"

PrivateSubnet2:
  Type: AWS::EC2::Subnet
  Properties:
    VpcId: !Ref VPC
    CidrBlock: !Select [3, !Cidr [!Ref VpcCidrBlock, 8, 8]]
    AvailabilityZone: !Ref AvailabilityZone2
    Tags:
      - Key: Name
        Value: "Private Subnet 2"

# Public Route Tables
PublicRouteTable1:
  Type: AWS::EC2::RouteTable
  Properties:
    VpcId: !Ref VPC
    Tags:
      - Key: Name
        Value: !Sub "PublicRouteTable1_${VpcName}"

PublicRouteTable2:
  Type: AWS::EC2::RouteTable
  Properties:
    VpcId: !Ref VPC
    Tags:
      - Key: Name
        Value: !Sub "PublicRouteTable2_${VpcName}"

PublicRoute1:
  Type: AWS::EC2::Route
  DependsOn:
    - AttachGateway
    - PublicRouteTable1
  Properties:
    RouteTableId: !Ref PublicRouteTable1
    DestinationCidrBlock: "0.0.0.0/0"
    GatewayId: !Ref InternetGateway

PublicRoute2:
  Type: AWS::EC2::Route
  DependsOn:
    - AttachGateway
    - PublicRouteTable2
  Properties:
    RouteTableId: !Ref PublicRouteTable2
    DestinationCidrBlock: "0.0.0.0/0"
    GatewayId: !Ref InternetGateway

PublicSubnetRouteTableAssociation1:
  Type: AWS::EC2::SubnetRouteTableAssociation
  DependsOn:
    - PublicSubnet1
    - PublicRouteTable1
  Properties:
    SubnetId: !Ref PublicSubnet1
    RouteTableId: !Ref PublicRouteTable1

PublicSubnetRouteTableAssociation2:
  Type: AWS::EC2::SubnetRouteTableAssociation
  DependsOn:
    - PublicSubnet2
    - PublicRouteTable2
  Properties:
    SubnetId: !Ref PublicSubnet2
    RouteTableId: !Ref PublicRouteTable2

# Private Route Tables
PrivateRouteTable1:
  Type: AWS::EC2::RouteTable
  Properties:
    VpcId: !Ref VPC
    Tags:
      - Key: Name
        Value: !Sub "PrivateRouteTable1_${VpcName}"

PrivateRouteTable2:
  Type: AWS::EC2::RouteTable
  Properties:
    VpcId: !Ref VPC
    Tags:
      - Key: Name
        Value: !Sub "PrivateRouteTable2_${VpcName}"

PrivateRoute1:
  Type: AWS::EC2::Route
  DependsOn:
    - NatGateway1
    - PrivateRouteTable1
  Properties:
    RouteTableId: !Ref PrivateRouteTable1
    DestinationCidrBlock: "0.0.0.0/0"
    NatGatewayId: !Ref NatGateway1

PrivateRoute2:
  Type: AWS::EC2::Route
  DependsOn:
    - NatGateway2
    - PrivateRouteTable2
  Properties:
    RouteTableId: !Ref PrivateRouteTable2
    DestinationCidrBlock: "0.0.0.0/0"
    NatGatewayId: !Ref NatGateway2

PrivateSubnetRouteTableAssociation1:
  Type: AWS::EC2::SubnetRouteTableAssociation
  DependsOn:
    - PrivateSubnet1
    - PrivateRouteTable1
  Properties:
    SubnetId: !Ref PrivateSubnet1
    RouteTableId: !Ref PrivateRouteTable1

PrivateSubnetRouteTableAssociation2:
  Type: AWS::EC2::SubnetRouteTableAssociation
  DependsOn:
    - PrivateSubnet2
    - PrivateRouteTable2
  Properties:
    SubnetId: !Ref PrivateSubnet2
    RouteTableId: !Ref PrivateRouteTable2

# S3 VPC Endpoint for Private Subnets
S3VPCEndpoint:
  Type: AWS::EC2::VPCEndpoint
  DependsOn:
    - PrivateRouteTable1
    - PrivateRouteTable2
  Properties:
    VpcId: !Ref VPC
    ServiceName: !Sub "com.amazonaws.${AWS::Region}.s3"
    RouteTableIds:
      - !Ref PrivateRouteTable1
      - !Ref PrivateRouteTable2
    VpcEndpointType: Gateway